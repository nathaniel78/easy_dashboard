version: '3.8'

services:
  # BACKEND
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000 --insecure"
    volumes:
      - ./backend:/api
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    networks:
      - dashboard-network

  # FRONTEND
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    command: >
      sh -c "streamlit run main.py --server.port 8501 --server.address 0.0.0.0"
    ports:
      - "8501:8501"
    depends_on:
      - backend
    restart: always
    environment:
      - API_URL=http://backend:8000/api
    volumes:
      - ./frontend:/app
    networks:
      - dashboard-network

  # DB
  db:
    image: postgres:13
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - dashboard-network

  # PGADMIN
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: username@email.com
      PGADMIN_DEFAULT_PASSWORD: Username123!@#
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "9080:80"
    depends_on:
      - db
    networks:
      - dashboard-network
  
  # NGINX
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    restart: always
    networks:
      - dashboard-network

# VOLUMES
volumes:
  db_data:
    name: db_data
  pgadmin_data:
    name: pgadmin_data

# NETWORKS
networks:
  dashboard-network:
    driver: bridge
